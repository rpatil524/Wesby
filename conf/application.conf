# This is the main configuration file for the application.
# ~~~~~

# Secret key
# ~~~~~
# The secret key is used to secure cryptographics functions.
#
# This must be changed for production, but we recommend not changing it in this file.
#
# See http://www.playframework.com/documentation/latest/ApplicationSecret for more details.
play.crypto.secret = "changeme"

# The application languages
# ~~~~~
play.i18n.langs = [ "en", "es", "ast" ]

# Router
# ~~~~~
# Define the Router object to use for this application.
# This router will be looked up first when the application is starting up,
# so make sure this is the entry point.
# Furthermore, it's assumed your route file is named properly.
# So for an application router like `my.application.Router`,
# you may need to define a router file `conf/my.application.routes`.
# Default to Routes in the root package (and conf/routes)
# play.http.router = my.application.Routes

# Database configuration
# ~~~~~
# You can declare as many datasources as you want.
# By convention, the default datasource is named `default`
#
# db.default.driver=org.h2.Driver
# db.default.url="jdbc:h2:mem:play"
# db.default.user=sa
# db.default.password=""

# Evolutions
# ~~~~~
# You can disable evolutions if needed
# play.evolutions.enabled=false

# You can disable evolutions for a specific datasource if necessary
# play.evolutions.db.default.enabled=false

# Wesby configuration
wesby.endpoint = "http://156.35.95.49:3030/wesby-test/query"
wesby.index = "/welcome"
wesby.host = "http://example.org/"
wesby.altLabelProperty = ""

queries.s = "SELECT DISTINCT * WHERE {<$resource> ?r1 ?r2 .}"
queries.p = "SELECT DISTINCT * WHERE {?r1 <$resource> ?r2 .}"
queries.o = "SELECT DISTINCT * WHERE {?r1 ?r2 <$resource> .}"

queries.construct = """
CONSTRUCT {
	<$resource> ?p ?o .
	?s ?p2 <$resource>
} WHERE {
  { <$resource> ?p ?o .} UNION { ?s ?p2 <$resource>}
}
"""

queries.simpleSearch = """

SELECT ?label ?resource WHERE {
  ?resource a $type .
  OPTIONAL {?resource rdfs:label ?label}
  OPTIONAL {?resource foaf:Name ?label}
  OPTIONAL {?resource foaf:givenName ?label}
  OPTIONAL {?resource foaf:familyName ?label}
  ?resource coteam:label ?label
  FILTER regex(?label, "$query", "i")
}
"""

queries.labelPropSearch = """

SELECT ?label ?resource WHERE {
  ?resource a $type .
  ?resource $labelProperty ?label
  FILTER regex(?label, "$query", "i")
}
"""

shapes.format = "SHEXC"
shapes.location = "public/shapes/test-shapes.shex"